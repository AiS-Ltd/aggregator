const abis = {
	"lendings.a": [
		"event Borrow(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint256 borrowRateMode, uint256 borrowRate, uint16 indexed referral)",
		"event Deposit(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint16 indexed referral)",
		"event FlashLoan(address indexed target, address indexed initiator, address indexed asset, uint256 amount, uint256 premium, uint16 referralCode)",
		"event LiquidationCall(address indexed collateralAsset, address indexed debtAsset, address indexed user, uint256 debtToCover, uint256 liquidatedCollateralAmount, address liquidator, bool receiveAToken)",
		"event Paused()",
		"event RebalanceStableBorrowRate(address indexed reserve, address indexed user)",
		"event Repay(address indexed reserve, address indexed user, address indexed repayer, uint256 amount)",
		"event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
		"event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user)",
		"event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user)",
		"event Swap(address indexed reserve, address indexed user, uint256 rateMode)",
		"event Unpaused()",
		"event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount)",
		"function FLASHLOAN_PREMIUM_TOTAL() view returns (uint256)",
		"function LENDINGPOOL_REVISION() view returns (uint256)",
		"function MAX_NUMBER_RESERVES() view returns (uint256)",
		"function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() view returns (uint256)",
		"function borrow(address asset, uint256 amount, uint256 interestRateMode, uint16 referralCode, address onBehalfOf)",
		"function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)",
		"function finalizeTransfer(address asset, address from, address to, uint256 amount, uint256 balanceFromBefore, uint256 balanceToBefore)",
		"function flashLoan(address receiverAddress, address[] assets, uint256[] amounts, uint256[] modes, address onBehalfOf, bytes params, uint16 referralCode)",
		"function getAddressesProvider() view returns (address)",
		"function getConfiguration(address asset) view returns ((uint256 data))",
		"function getReserveData(address asset) view returns (((uint256 data) configuration, uint128 liquidityIndex, uint128 variableBorrowIndex, uint128 currentLiquidityRate, uint128 currentVariableBorrowRate, uint128 currentStableBorrowRate, uint40 lastUpdateTimestamp, address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress, address interestRateStrategyAddress, uint8 id))",
		"function getReserveNormalizedIncome(address asset) view returns (uint256)",
		"function getReserveNormalizedVariableDebt(address asset) view returns (uint256)",
		"function getReservesList() view returns (address[])",
		"function getUserAccountData(address user) view returns (uint256 totalCollateralETH, uint256 totalDebtETH, uint256 availableBorrowsETH, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor)",
		"function getUserConfiguration(address user) view returns ((uint256 data))",
		"function initReserve(address asset, address aTokenAddress, address stableDebtAddress, address variableDebtAddress, address interestRateStrategyAddress)",
		"function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveAToken)",
		"function paused() view returns (bool)",
		"function rebalanceStableBorrowRate(address asset, address user)",
		"function repay(address asset, uint256 amount, uint256 rateMode, address onBehalfOf) returns (uint256)",
		"function setConfiguration(address asset, uint256 configuration)",
		"function setPause(bool val)",
		"function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress)",
		"function setUserUseReserveAsCollateral(address asset, bool useAsCollateral)",
		"function swapBorrowRateMode(address asset, uint256 rateMode)",
		"function withdraw(address asset, uint256 amount, address to) returns (uint256)",
		"event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy)",
		"event ConfigurationAdminUpdated(address indexed newAddress)",
		"event EmergencyAdminUpdated(address indexed newAddress)",
		"event LendingPoolCollateralManagerUpdated(address indexed newAddress)",
		"event LendingPoolConfiguratorUpdated(address indexed newAddress)",
		"event LendingPoolUpdated(address indexed newAddress)",
		"event LendingRateOracleUpdated(address indexed newAddress)",
		"event MarketIdSet(string newMarketId)",
		"event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
		"event PriceOracleUpdated(address indexed newAddress)",
		"event ProxyCreated(bytes32 id, address indexed newAddress)",
		"function getAddress(bytes32 id) view returns (address)",
		"function getEmergencyAdmin() view returns (address)",
		"function getLendingPool() view returns (address)",
		"function getLendingPoolCollateralManager() view returns (address)",
		"function getLendingPoolConfigurator() view returns (address)",
		"function getLendingRateOracle() view returns (address)",
		"function getMarketId() view returns (string)",
		"function getPoolAdmin() view returns (address)",
		"function getPriceOracle() view returns (address)",
		"function owner() view returns (address)",
		"function renounceOwnership()",
		"function setAddress(bytes32 id, address newAddress)",
		"function setAddressAsProxy(bytes32 id, address implementationAddress)",
		"function setEmergencyAdmin(address emergencyAdmin)",
		"function setLendingPoolCollateralManager(address manager)",
		"function setLendingPoolConfiguratorImpl(address configurator)",
		"function setLendingPoolImpl(address pool)",
		"function setLendingRateOracle(address lendingRateOracle)",
		"function setMarketId(string marketId)",
		"function setPoolAdmin(address admin)",
		"function setPriceOracle(address priceOracle)",
		"function transferOwnership(address newOwner)",
		"event Approval(address indexed owner, address indexed spender, uint256 value)",
		"event BorrowAllowanceDelegated(address indexed fromUser, address indexed toUser, address asset, uint256 amount)",
		"event Transfer(address indexed from, address indexed to, uint256 value)",
		"function allowance(address owner, address spender) view returns (uint256)",
		"function approve(address spender, uint256 amount) returns (bool)",
		"function approveDelegation(address delegatee, uint256 amount)",
		"function balanceOf(address account) view returns (uint256)",
		"function borrowAllowance(address fromUser, address toUser) view returns (uint256)",
		"function decimals() view returns (uint8)",
		"function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
		"function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
		"function name() view returns (string)",
		"function symbol() view returns (string)",
		"function totalSupply() view returns (uint256)",
		"function transfer(address recipient, uint256 amount) returns (bool)",
		"function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
		"function WETH() view returns (address)",
		"function getAssetPrice(address asset) view returns (uint256)",
		"function setAssetPrice(address asset, uint256 price)",
		"function getPriceOracle(uint256 pid) view returns (address)"
	],
	"lendings.ax": [
		"event Borrow(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint256 borrowRate, uint16 indexed referral)",
		"event Deposit(address indexed reserve, address user, address indexed onBehalfOf, uint256 amount, uint16 indexed referral)",
		"event LiquidationCall(address indexed collateralAsset, address indexed debtAsset, address indexed user, uint256 debtToCover, uint256 liquidatedCollateralAmount, address liquidator, bool receiveTToken)",
		"event Paused()",
		"event Repay(address indexed reserve, address indexed user, address indexed repayer, uint256 amount)",
		"event ReserveDataUpdated(address indexed reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)",
		"event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user)",
		"event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user)",
		"event SetConfiguration(address indexed asset, uint256 indexedconfiguration)",
		"event Unpaused()",
		"event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount)",
		"function LENDINGPOOL_REVISION() view returns (uint256)",
		"function borrow(address asset, uint256 amount, uint16 referralCode, address onBehalfOf)",
		"function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)",
		"function finalizeTransfer(address asset, address from, address to, uint256 amount, uint256 balanceFromBefore, uint256 balanceToBefore)",
		"function getAddressesProvider() view returns (address)",
		"function getConfiguration(address asset) view returns ((uint256 data))",
		"function getReserveData(address asset) view returns (((uint256 data) configuration, uint128 liquidityIndex, uint128 variableBorrowIndex, uint128 currentLiquidityRate, uint128 currentVariableBorrowRate, uint40 lastUpdateTimestamp, address tTokenAddress, address variableDebtTokenAddress, address interestRateStrategyAddress, uint8 id))",
		"function getReserveNormalizedIncome(address asset) view returns (uint256)",
		"function getReserveNormalizedVariableDebt(address asset) view returns (uint256)",
		"function getReservesList() view returns (address[])",
		"function getUserAccountData(address user) view returns (uint256 totalCollateralUSD, uint256 totalDebtUSD, uint256 availableBorrowsUSD, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor)",
		"function getUserConfiguration(address user) view returns ((uint256 data))",
		"function isActiveCreditScore() view returns (bool)",
		"function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveTToken)",
		"function paused() view returns (bool)",
		"function repay(address asset, uint256 amount, address onBehalfOf) returns (uint256)",
		"function setActiveCreditScore(bool val)",
		"function setConfiguration(address asset, uint256 configuration)",
		"function setPause(bool val)",
		"function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress)",
		"function setUserUseReserveAsCollateral(address asset, bool useAsCollateral)",
		"function withdraw(address asset, uint256 amount, address to) returns (uint256)",
		"event AddressSet(uint256 providerId, bytes32 id, address indexed newAddress, bool hasProxy)",
		"event ConfigurationAdminUpdated(uint256 providerId, address indexed newAddress)",
		"event EmergencyAdminUpdated(uint256 providerId, address indexed newAddress)",
		"event LendingPoolCollateralManagerUpdated(uint256 providerId, address indexed newAddress)",
		"event LendingPoolConfiguratorUpdated(uint256 providerId, address indexed newAddress)",
		"event LendingPoolUpdated(uint256 providerId, address indexed newAddress)",
		"event LendingRateOracleUpdated(uint256 providerId, address indexed newAddress)",
		"event PoolConfigured(address pool, uint256)",
		"event PriceOracleUpdated(uint256 providerId, address indexed newAddress)",
		"event ProxyCreated(uint256 providerId, bytes32 id, address indexed newAddress)",
		"event ProxyCreated2(bytes32 id, address indexed newAddress)",
		"function getAddress(uint256 providerId, bytes32 id) view returns (address)",
		"function getCreditScoring() view returns (address)",
		"function getGovernance() view returns (address)",
		"function getLendingPool(uint256 providerId) view returns (address)",
		"function getLendingPoolCollateralManager(uint256 providerId) view returns (address)",
		"function getLendingPoolConfigurator(uint256 providerId) view returns (address)",
		"function getLendingRateOracle(uint256 providerId) view returns (address)",
		"function getPoolOwner(uint256 providerId) view returns (address)",
		"function getPoolUpdateController() view returns (address)",
		"function getPriceOracle(uint256 providerId) view returns (address)",
		"function initPool(address pool, address priceOracle, address configurator) returns (uint256)",
		"function setAddress(uint256 providerId, bytes32 id, address newAddress)",
		"function setLendingPoolCollateralManager(uint256 providerId, address manager)",
		"function setLendingPoolConfiguratorImpl(uint256 providerId, address configurator)",
		"function setLendingPoolImpl(uint256 providerId, address pool)",
		"function setLendingRateOracle(uint256 providerId, address lendingRateOracle)",
		"function setPriceOracle(uint256 providerId, address priceOracle)",
		"event Approval(address indexed owner, address indexed spender, uint256 value)",
		"event BorrowAllowanceDelegated(address indexed fromUser, address indexed toUser, address asset, uint256 amount)",
		"event Transfer(address indexed from, address indexed to, uint256 value)",
		"function allowance(address owner, address spender) view returns (uint256)",
		"function approve(address spender, uint256 amount) returns (bool)",
		"function approveDelegation(address delegatee, uint256 amount)",
		"function balanceOf(address account) view returns (uint256)",
		"function borrowAllowance(address fromUser, address toUser) view returns (uint256)",
		"function decimals() view returns (uint8)",
		"function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
		"function getOwner() view returns (address)",
		"function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
		"function name() view returns (string)",
		"function symbol() view returns (string)",
		"function totalSupply() view returns (uint256)",
		"function transfer(address recipient, uint256 amount) returns (bool)",
		"function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
		"event AssetSourceUpdated(address indexed asset, address indexed source)",
		"event FallbackOracleUpdated(address indexed fallbackOracle)",
		"event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
		"event WethSet(address indexed weth)",
		"function WETH() view returns (address)",
		"function getAssetPrice(address asset) view returns (uint256)",
		"function getAssetsPrices(address[] assets) view returns (uint256[])",
		"function getFallbackOracle() view returns (address)",
		"function getSourceOfAsset(address asset) view returns (address)",
		"function owner() view returns (address)",
		"function renounceOwnership()",
		"function setAssetSources(address[] assets, address[] sources)",
		"function setFallbackOracle(address fallbackOracle)",
		"function transferOwnership(address newOwner)"
	],
	"lendings.b": [],
	"lendings.c": [
		"function cTokenBalances(address cToken, address account) returns ((address cToken, uint256 balanceOf, uint256 borrowBalanceCurrent, uint256 balanceOfUnderlying, uint256 tokenBalance, uint256 tokenAllowance))",
		"function cTokenBalancesAll(address[] cTokens, address account) returns ((address cToken, uint256 balanceOf, uint256 borrowBalanceCurrent, uint256 balanceOfUnderlying, uint256 tokenBalance, uint256 tokenAllowance)[])",
		"function cTokenMetadata(address cToken) returns ((address cToken, uint256 exchangeRateCurrent, uint256 supplyRatePerBlock, uint256 borrowRatePerBlock, uint256 reserveFactorMantissa, uint256 totalBorrows, uint256 totalReserves, uint256 totalSupply, uint256 totalCash, bool isListed, uint256 collateralFactorMantissa, address underlyingAssetAddress, uint256 cTokenDecimals, uint256 underlyingDecimals, uint256 compSupplySpeed, uint256 compBorrowSpeed, uint256 borrowCap))",
		"function cTokenMetadataAll(address[] cTokens) returns ((address cToken, uint256 exchangeRateCurrent, uint256 supplyRatePerBlock, uint256 borrowRatePerBlock, uint256 reserveFactorMantissa, uint256 totalBorrows, uint256 totalReserves, uint256 totalSupply, uint256 totalCash, bool isListed, uint256 collateralFactorMantissa, address underlyingAssetAddress, uint256 cTokenDecimals, uint256 underlyingDecimals, uint256 compSupplySpeed, uint256 compBorrowSpeed, uint256 borrowCap)[])",
		"function cTokenUnderlyingPrice(address cToken) returns ((address cToken, uint256 underlyingPrice))",
		"function cTokenUnderlyingPriceAll(address[] cTokens) returns ((address cToken, uint256 underlyingPrice)[])",
		"function getAccountLimits(address comptroller, address account) returns ((address[] markets, uint256 liquidity, uint256 shortfall))",
		"function getCompBalanceMetadata(address comp, address account) view returns ((uint256 balance, uint256 votes, address delegate))",
		"function getCompBalanceMetadataExt(address comp, address comptroller, address account) returns ((uint256 balance, uint256 votes, address delegate, uint256 allocated))",
		"function getCompVotes(address comp, address account, uint32[] blockNumbers) view returns ((uint256 blockNumber, uint256 votes)[])",
		"function getGovBravoProposals(address governor, uint256[] proposalIds) view returns ((uint256 proposalId, address proposer, uint256 eta, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 startBlock, uint256 endBlock, uint256 forVotes, uint256 againstVotes, uint256 abstainVotes, bool canceled, bool executed)[])",
		"function getGovBravoReceipts(address governor, address voter, uint256[] proposalIds) view returns ((uint256 proposalId, bool hasVoted, uint8 support, uint96 votes)[])",
		"function getGovProposals(address governor, uint256[] proposalIds) view returns ((uint256 proposalId, address proposer, uint256 eta, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 startBlock, uint256 endBlock, uint256 forVotes, uint256 againstVotes, bool canceled, bool executed)[])",
		"function getGovReceipts(address governor, address voter, uint256[] proposalIds) view returns ((uint256 proposalId, bool hasVoted, bool support, uint96 votes)[])",
		"error AcceptAdminPendingAdminCheck()",
		"error AddReservesFactorFreshCheck(uint256 actualAddAmount)",
		"error BorrowCashNotAvailable()",
		"error BorrowComptrollerRejection(uint256 errorCode)",
		"error BorrowFreshnessCheck()",
		"error LiquidateAccrueBorrowInterestFailed(uint256 errorCode)",
		"error LiquidateAccrueCollateralInterestFailed(uint256 errorCode)",
		"error LiquidateCloseAmountIsUintMax()",
		"error LiquidateCloseAmountIsZero()",
		"error LiquidateCollateralFreshnessCheck()",
		"error LiquidateComptrollerRejection(uint256 errorCode)",
		"error LiquidateFreshnessCheck()",
		"error LiquidateLiquidatorIsBorrower()",
		"error LiquidateRepayBorrowFreshFailed(uint256 errorCode)",
		"error LiquidateSeizeComptrollerRejection(uint256 errorCode)",
		"error LiquidateSeizeLiquidatorIsBorrower()",
		"error MintComptrollerRejection(uint256 errorCode)",
		"error MintFreshnessCheck()",
		"error RedeemComptrollerRejection(uint256 errorCode)",
		"error RedeemFreshnessCheck()",
		"error RedeemTransferOutNotPossible()",
		"error ReduceReservesAdminCheck()",
		"error ReduceReservesCashNotAvailable()",
		"error ReduceReservesCashValidation()",
		"error ReduceReservesFreshCheck()",
		"error RepayBorrowComptrollerRejection(uint256 errorCode)",
		"error RepayBorrowFreshnessCheck()",
		"error SetComptrollerOwnerCheck()",
		"error SetInterestRateModelFreshCheck()",
		"error SetInterestRateModelOwnerCheck()",
		"error SetPendingAdminOwnerCheck()",
		"error SetReserveFactorAdminCheck()",
		"error SetReserveFactorBoundsCheck()",
		"error SetReserveFactorFreshCheck()",
		"error TransferComptrollerRejection(uint256 errorCode)",
		"error TransferNotAllowed()",
		"error TransferNotEnough()",
		"error TransferTooMuch()",
		"event AccrueInterest(uint256 cashPrior, uint256 interestAccumulated, uint256 borrowIndex, uint256 totalBorrows)",
		"event Approval(address indexed owner, address indexed spender, uint256 amount)",
		"event Borrow(address borrower, uint256 borrowAmount, uint256 accountBorrows, uint256 totalBorrows)",
		"event LiquidateBorrow(address liquidator, address borrower, uint256 repayAmount, address cTokenCollateral, uint256 seizeTokens)",
		"event Mint(address minter, uint256 mintAmount, uint256 mintTokens)",
		"event NewAdmin(address oldAdmin, address newAdmin)",
		"event NewComptroller(address oldComptroller, address newComptroller)",
		"event NewMarketInterestRateModel(address oldInterestRateModel, address newInterestRateModel)",
		"event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin)",
		"event NewReserveFactor(uint256 oldReserveFactorMantissa, uint256 newReserveFactorMantissa)",
		"event Redeem(address redeemer, uint256 redeemAmount, uint256 redeemTokens)",
		"event RepayBorrow(address payer, address borrower, uint256 repayAmount, uint256 accountBorrows, uint256 totalBorrows)",
		"event ReservesAdded(address benefactor, uint256 addAmount, uint256 newTotalReserves)",
		"event ReservesReduced(address admin, uint256 reduceAmount, uint256 newTotalReserves)",
		"event Transfer(address indexed from, address indexed to, uint256 amount)",
		"function _acceptAdmin() returns (uint256)",
		"function _addReserves(uint256 addAmount) returns (uint256)",
		"function _delegateCompLikeTo(address compLikeDelegatee)",
		"function _reduceReserves(uint256 reduceAmount) returns (uint256)",
		"function _setComptroller(address newComptroller) returns (uint256)",
		"function _setInterestRateModel(address newInterestRateModel) returns (uint256)",
		"function _setPendingAdmin(address newPendingAdmin) returns (uint256)",
		"function _setReserveFactor(uint256 newReserveFactorMantissa) returns (uint256)",
		"function accrualBlockNumber() view returns (uint256)",
		"function accrueInterest() returns (uint256)",
		"function admin() view returns (address)",
		"function allowance(address owner, address spender) view returns (uint256)",
		"function approve(address spender, uint256 amount) returns (bool)",
		"function balanceOf(address owner) view returns (uint256)",
		"function balanceOfUnderlying(address owner) returns (uint256)",
		"function borrow(uint256 borrowAmount) returns (uint256)",
		"function borrowBalanceCurrent(address account) returns (uint256)",
		"function borrowBalanceStored(address account) view returns (uint256)",
		"function borrowIndex() view returns (uint256)",
		"function borrowRatePerBlock() view returns (uint256)",
		"function comptroller() view returns (address)",
		"function decimals() view returns (uint8)",
		"function exchangeRateCurrent() returns (uint256)",
		"function exchangeRateStored() view returns (uint256)",
		"function getAccountSnapshot(address account) view returns (uint256, uint256, uint256, uint256)",
		"function getCash() view returns (uint256)",
		"function interestRateModel() view returns (address)",
		"function isCToken() view returns (bool)",
		"function name() view returns (string)",
		"function NO_ERROR() view returns (uint256)",
		"function pendingAdmin() view returns (address)",
		"function protocolSeizeShareMantissa() view returns (uint256)",
		"function redeem(uint256 redeemTokens) returns (uint256)",
		"function redeemUnderlying(uint256 redeemAmount) returns (uint256)",
		"function reserveFactorMantissa() view returns (uint256)",
		"function seize(address liquidator, address borrower, uint256 seizeTokens) returns (uint256)",
		"function supplyRatePerBlock() view returns (uint256)",
		"function symbol() view returns (string)",
		"function totalBorrows() view returns (uint256)",
		"function totalBorrowsCurrent() returns (uint256)",
		"function totalReserves() view returns (uint256)",
		"function totalSupply() view returns (uint256)",
		"function transfer(address dst, uint256 amount) returns (bool)",
		"function transferFrom(address src, address dst, uint256 amount) returns (bool)",
		"function underlying() view returns (address)",
		"function sweepToken(address token)",
		"function mint(uint256 mintAmount) returns (uint256)",
		"function mint() payable",
		"function liquidateBorrow(address borrower, address cTokenCollateral) payable",
		"function liquidateBorrow(address borrower, uint256 repayAmount, address cTokenCollateral) returns (uint256)",
		"function repayBorrow(uint256 repayAmount) returns (uint256)",
		"function repayBorrow() payable",
		"function repayBorrowBehalf(address borrower, uint256 repayAmount) returns (uint256)",
		"function repayBorrowBehalf(address borrower) payable",
		"event ActionPaused(address cToken, string action, bool pauseState)",
		"event CompAccruedAdjusted(address indexed user, uint256 oldCompAccrued, uint256 newCompAccrued)",
		"event CompBorrowSpeedUpdated(address indexed cToken, uint256 newSpeed)",
		"event CompGranted(address recipient, uint256 amount)",
		"event CompReceivableUpdated(address indexed user, uint256 oldCompReceivable, uint256 newCompReceivable)",
		"event CompSupplySpeedUpdated(address indexed cToken, uint256 newSpeed)",
		"event ContributorCompSpeedUpdated(address indexed contributor, uint256 newSpeed)",
		"event DistributedBorrowerComp(address indexed cToken, address indexed borrower, uint256 compDelta, uint256 compBorrowIndex)",
		"event DistributedSupplierComp(address indexed cToken, address indexed supplier, uint256 compDelta, uint256 compSupplyIndex)",
		"event Failure(uint256 error, uint256 info, uint256 detail)",
		"event MarketEntered(address cToken, address account)",
		"event MarketExited(address cToken, address account)",
		"event MarketListed(address cToken)",
		"event NewBorrowCap(address indexed cToken, uint256 newBorrowCap)",
		"event NewBorrowCapGuardian(address oldBorrowCapGuardian, address newBorrowCapGuardian)",
		"event NewCloseFactor(uint256 oldCloseFactorMantissa, uint256 newCloseFactorMantissa)",
		"event NewCollateralFactor(address cToken, uint256 oldCollateralFactorMantissa, uint256 newCollateralFactorMantissa)",
		"event NewLiquidationIncentive(uint256 oldLiquidationIncentiveMantissa, uint256 newLiquidationIncentiveMantissa)",
		"event NewPauseGuardian(address oldPauseGuardian, address newPauseGuardian)",
		"event NewPriceOracle(address oldPriceOracle, address newPriceOracle)",
		"function _become(address unitroller)",
		"function _borrowGuardianPaused() view returns (bool)",
		"function _grantComp(address recipient, uint256 amount)",
		"function _mintGuardianPaused() view returns (bool)",
		"function _setBorrowCapGuardian(address newBorrowCapGuardian)",
		"function _setBorrowPaused(address cToken, bool state) returns (bool)",
		"function _setCloseFactor(uint256 newCloseFactorMantissa) returns (uint256)",
		"function _setCollateralFactor(address cToken, uint256 newCollateralFactorMantissa) returns (uint256)",
		"function _setCompSpeeds(address[] cTokens, uint256[] supplySpeeds, uint256[] borrowSpeeds)",
		"function _setContributorCompSpeed(address contributor, uint256 compSpeed)",
		"function _setLiquidationIncentive(uint256 newLiquidationIncentiveMantissa) returns (uint256)",
		"function _setMarketBorrowCaps(address[] cTokens, uint256[] newBorrowCaps)",
		"function _setMintPaused(address cToken, bool state) returns (bool)",
		"function _setPauseGuardian(address newPauseGuardian) returns (uint256)",
		"function _setPriceOracle(address newOracle) returns (uint256)",
		"function _setSeizePaused(bool state) returns (bool)",
		"function _setTransferPaused(bool state) returns (bool)",
		"function _supportMarket(address cToken) returns (uint256)",
		"function accountAssets(address, uint256) view returns (address)",
		"function allMarkets(uint256) view returns (address)",
		"function borrowAllowed(address cToken, address borrower, uint256 borrowAmount) returns (uint256)",
		"function borrowCapGuardian() view returns (address)",
		"function borrowCaps(address) view returns (uint256)",
		"function borrowGuardianPaused(address) view returns (bool)",
		"function borrowVerify(address cToken, address borrower, uint256 borrowAmount)",
		"function checkMembership(address account, address cToken) view returns (bool)",
		"function claimComp(address holder, address[] cTokens)",
		"function claimComp(address[] holders, address[] cTokens, bool borrowers, bool suppliers)",
		"function claimComp(address holder)",
		"function closeFactorMantissa() view returns (uint256)",
		"function compAccrued(address) view returns (uint256)",
		"function compBorrowSpeeds(address) view returns (uint256)",
		"function compBorrowState(address) view returns (uint224 index, uint32 block)",
		"function compBorrowerIndex(address, address) view returns (uint256)",
		"function compContributorSpeeds(address) view returns (uint256)",
		"function compInitialIndex() view returns (uint224)",
		"function compRate() view returns (uint256)",
		"function compReceivable(address) view returns (uint256)",
		"function compSpeeds(address) view returns (uint256)",
		"function compSupplierIndex(address, address) view returns (uint256)",
		"function compSupplySpeeds(address) view returns (uint256)",
		"function compSupplyState(address) view returns (uint224 index, uint32 block)",
		"function comptrollerImplementation() view returns (address)",
		"function enterMarkets(address[] cTokens) returns (uint256[])",
		"function exitMarket(address cTokenAddress) returns (uint256)",
		"function fixBadAccruals(address[] affectedUsers, uint256[] amounts)",
		"function getAccountLiquidity(address account) view returns (uint256, uint256, uint256)",
		"function getAllMarkets() view returns (address[])",
		"function getAssetsIn(address account) view returns (address[])",
		"function getBlockNumber() view returns (uint256)",
		"function getCompAddress() view returns (address)",
		"function getHypotheticalAccountLiquidity(address account, address cTokenModify, uint256 redeemTokens, uint256 borrowAmount) view returns (uint256, uint256, uint256)",
		"function isComptroller() view returns (bool)",
		"function isDeprecated(address cToken) view returns (bool)",
		"function lastContributorBlock(address) view returns (uint256)",
		"function liquidateBorrowAllowed(address cTokenBorrowed, address cTokenCollateral, address liquidator, address borrower, uint256 repayAmount) returns (uint256)",
		"function liquidateBorrowVerify(address cTokenBorrowed, address cTokenCollateral, address liquidator, address borrower, uint256 actualRepayAmount, uint256 seizeTokens)",
		"function liquidateCalculateSeizeTokens(address cTokenBorrowed, address cTokenCollateral, uint256 actualRepayAmount) view returns (uint256, uint256)",
		"function liquidationIncentiveMantissa() view returns (uint256)",
		"function markets(address) view returns (bool isListed, uint256 collateralFactorMantissa, bool isComped)",
		"function maxAssets() view returns (uint256)",
		"function mintAllowed(address cToken, address minter, uint256 mintAmount) returns (uint256)",
		"function mintGuardianPaused(address) view returns (bool)",
		"function mintVerify(address cToken, address minter, uint256 actualMintAmount, uint256 mintTokens)",
		"function oracle() view returns (address)",
		"function pauseGuardian() view returns (address)",
		"function pendingComptrollerImplementation() view returns (address)",
		"function proposal65FixExecuted() view returns (bool)",
		"function redeemAllowed(address cToken, address redeemer, uint256 redeemTokens) returns (uint256)",
		"function redeemVerify(address cToken, address redeemer, uint256 redeemAmount, uint256 redeemTokens)",
		"function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) returns (uint256)",
		"function repayBorrowVerify(address cToken, address payer, address borrower, uint256 actualRepayAmount, uint256 borrowerIndex)",
		"function seizeAllowed(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) returns (uint256)",
		"function seizeGuardianPaused() view returns (bool)",
		"function seizeVerify(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens)",
		"function transferAllowed(address cToken, address src, address dst, uint256 transferTokens) returns (uint256)",
		"function transferGuardianPaused() view returns (bool)",
		"function transferVerify(address cToken, address src, address dst, uint256 transferTokens)",
		"function updateContributorRewards(address contributor)",
		"function isPriceOracle() view returns (bool)",
		"function getUnderlyingPrice(address cToken) view returns (uint)",
		"event AnchorPriceUpdated(bytes32 indexed symbolHash, uint256 anchorPrice, uint256 oldTimestamp, uint256 newTimestamp)",
		"event FailoverActivated(bytes32 indexed symbolHash)",
		"event FailoverDeactivated(bytes32 indexed symbolHash)",
		"event OwnershipTransferRequested(address indexed from, address indexed to)",
		"event OwnershipTransferred(address indexed from, address indexed to)",
		"event PriceGuarded(bytes32 indexed symbolHash, uint256 reporter, uint256 anchor)",
		"event PriceUpdated(bytes32 indexed symbolHash, uint256 price)",
		"event UniswapWindowUpdated(bytes32 indexed symbolHash, uint256 oldTimestamp, uint256 newTimestamp, uint256 oldPrice, uint256 newPrice)",
		"function acceptOwnership()",
		"function activateFailover(bytes32 symbolHash)",
		"function anchorPeriod() view returns (uint256)",
		"function deactivateFailover(bytes32 symbolHash)",
		"function ethBaseUnit() view returns (uint256)",
		"function expScale() view returns (uint256)",
		"function getTokenConfig(uint256 i) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigByCToken(address cToken) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigByReporter(address reporter) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigBySymbol(string symbol) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigBySymbolHash(bytes32 symbolHash) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigByUnderlying(address underlying) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function lowerBoundAnchorRatio() view returns (uint256)",
		"function maxTokens() view returns (uint256)",
		"function newObservations(bytes32) view returns (uint256 timestamp, uint256 acc)",
		"function numTokens() view returns (uint256)",
		"function oldObservations(bytes32) view returns (uint256 timestamp, uint256 acc)",
		"function owner() view returns (address)",
		"function pokeFailedOverPrice(bytes32 symbolHash)",
		"function price(string symbol) view returns (uint256)",
		"function prices(bytes32) view returns (uint248 price, bool failoverActive)",
		"function transferOwnership(address to)",
		"function upperBoundAnchorRatio() view returns (uint256)",
		"function validate(uint256, int256, uint256, int256 currentAnswer) returns (bool valid)"
	],
	"lendings.cx": [
		"function BLOCKS_PER_DAY() view returns (uint256)",
		"function getAccountLimits(address comptroller, address account) view returns ((address[] markets, uint256 liquidity, uint256 shortfall))",
		"function getDailyXVS(address account, address comptrollerAddress) returns (uint256)",
		"function getGovProposals(address governor, uint256[] proposalIds) view returns ((uint256 proposalId, address proposer, uint256 eta, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 startBlock, uint256 endBlock, uint256 forVotes, uint256 againstVotes, bool canceled, bool executed)[])",
		"function getGovReceipts(address governor, address voter, uint256[] proposalIds) view returns ((uint256 proposalId, bool hasVoted, bool support, uint96 votes)[])",
		"function getVenusVotes(address xvs, address account, uint32[] blockNumbers) view returns ((uint256 blockNumber, uint256 votes)[])",
		"function getXVSBalanceMetadata(address xvs, address account) view returns ((uint256 balance, uint256 votes, address delegate))",
		"function getXVSBalanceMetadataExt(address xvs, address comptroller, address account) returns ((uint256 balance, uint256 votes, address delegate, uint256 allocated))",
		"function pendingVenus(address holder, address comptroller) view returns (uint256)",
		"function vTokenBalances(address vToken, address account) returns ((address vToken, uint256 balanceOf, uint256 borrowBalanceCurrent, uint256 balanceOfUnderlying, uint256 tokenBalance, uint256 tokenAllowance))",
		"function vTokenBalancesAll(address[] vTokens, address account) returns ((address vToken, uint256 balanceOf, uint256 borrowBalanceCurrent, uint256 balanceOfUnderlying, uint256 tokenBalance, uint256 tokenAllowance)[])",
		"function vTokenMetadata(address vToken) returns ((address vToken, uint256 exchangeRateCurrent, uint256 supplyRatePerBlock, uint256 borrowRatePerBlock, uint256 reserveFactorMantissa, uint256 totalBorrows, uint256 totalReserves, uint256 totalSupply, uint256 totalCash, bool isListed, uint256 collateralFactorMantissa, address underlyingAssetAddress, uint256 vTokenDecimals, uint256 underlyingDecimals, uint256 venusSupplySpeed, uint256 venusBorrowSpeed, uint256 dailySupplyXvs, uint256 dailyBorrowXvs))",
		"function vTokenMetadataAll(address[] vTokens) returns ((address vToken, uint256 exchangeRateCurrent, uint256 supplyRatePerBlock, uint256 borrowRatePerBlock, uint256 reserveFactorMantissa, uint256 totalBorrows, uint256 totalReserves, uint256 totalSupply, uint256 totalCash, bool isListed, uint256 collateralFactorMantissa, address underlyingAssetAddress, uint256 vTokenDecimals, uint256 underlyingDecimals, uint256 venusSupplySpeed, uint256 venusBorrowSpeed, uint256 dailySupplyXvs, uint256 dailyBorrowXvs)[])",
		"function vTokenUnderlyingPrice(address vToken) view returns ((address vToken, uint256 underlyingPrice))",
		"function vTokenUnderlyingPriceAll(address[] vTokens) view returns ((address vToken, uint256 underlyingPrice)[])",
		"event AccrueInterest(uint256 cashPrior, uint256 interestAccumulated, uint256 borrowIndex, uint256 totalBorrows)",
		"event Approval(address indexed owner, address indexed spender, uint256 amount)",
		"event Borrow(address borrower, uint256 borrowAmount, uint256 accountBorrows, uint256 totalBorrows)",
		"event Failure(uint256 error, uint256 info, uint256 detail)",
		"event LiquidateBorrow(address liquidator, address borrower, uint256 repayAmount, address vTokenCollateral, uint256 seizeTokens)",
		"event Mint(address minter, uint256 mintAmount, uint256 mintTokens)",
		"event NewAdmin(address oldAdmin, address newAdmin)",
		"event NewComptroller(address oldComptroller, address newComptroller)",
		"event NewMarketInterestRateModel(address oldInterestRateModel, address newInterestRateModel)",
		"event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin)",
		"event NewReserveFactor(uint256 oldReserveFactorMantissa, uint256 newReserveFactorMantissa)",
		"event Redeem(address redeemer, uint256 redeemAmount, uint256 redeemTokens)",
		"event RepayBorrow(address payer, address borrower, uint256 repayAmount, uint256 accountBorrows, uint256 totalBorrows)",
		"event ReservesAdded(address benefactor, uint256 addAmount, uint256 newTotalReserves)",
		"event ReservesReduced(address admin, uint256 reduceAmount, uint256 newTotalReserves)",
		"event Transfer(address indexed from, address indexed to, uint256 amount)",
		"function _acceptAdmin() returns (uint256)",
		"function _reduceReserves(uint256 reduceAmount) returns (uint256)",
		"function _setComptroller(address newComptroller) returns (uint256)",
		"function _setInterestRateModel(address newInterestRateModel) returns (uint256)",
		"function _setPendingAdmin(address newPendingAdmin) returns (uint256)",
		"function _setReserveFactor(uint256 newReserveFactorMantissa) returns (uint256)",
		"function accrualBlockNumber() view returns (uint256)",
		"function accrueInterest() returns (uint256)",
		"function admin() view returns (address)",
		"function allowance(address owner, address spender) view returns (uint256)",
		"function approve(address spender, uint256 amount) returns (bool)",
		"function balanceOf(address owner) view returns (uint256)",
		"function balanceOfUnderlying(address owner) returns (uint256)",
		"function borrow(uint256 borrowAmount) returns (uint256)",
		"function borrowBalanceCurrent(address account) returns (uint256)",
		"function borrowBalanceStored(address account) view returns (uint256)",
		"function borrowIndex() view returns (uint256)",
		"function borrowRatePerBlock() view returns (uint256)",
		"function comptroller() view returns (address)",
		"function decimals() view returns (uint8)",
		"function exchangeRateCurrent() returns (uint256)",
		"function exchangeRateStored() view returns (uint256)",
		"function getAccountSnapshot(address account) view returns (uint256, uint256, uint256, uint256)",
		"function getCash() view returns (uint256)",
		"function interestRateModel() view returns (address)",
		"function isVToken() view returns (bool)",
		"function liquidateBorrow(address borrower, address vTokenCollateral) payable",
		"function name() view returns (string)",
		"function pendingAdmin() view returns (address)",
		"function redeem(uint256 redeemTokens) returns (uint256)",
		"function redeemUnderlying(uint256 redeemAmount) returns (uint256)",
		"function repayBorrow() payable",
		"function repayBorrowBehalf(address borrower) payable",
		"function reserveFactorMantissa() view returns (uint256)",
		"function seize(address liquidator, address borrower, uint256 seizeTokens) returns (uint256)",
		"function supplyRatePerBlock() view returns (uint256)",
		"function symbol() view returns (string)",
		"function totalBorrows() view returns (uint256)",
		"function totalBorrowsCurrent() returns (uint256)",
		"function totalReserves() view returns (uint256)",
		"function totalSupply() view returns (uint256)",
		"function transfer(address dst, uint256 amount) returns (bool)",
		"function transferFrom(address src, address dst, uint256 amount) returns (bool)",
		"function underlying() view returns (address)",
		"function sweepToken(address token)",
		"function mint(uint mintAmount)",
		"function mint() payable",
		"function liquidateBorrow(address borrower, address vTokenCollateral) payable",
		"function liquidateBorrow(address borrower, uint256 repayAmount, address vTokenCollateral) returns (uint256)",
		"function repayBorrow(uint256 repayAmount) returns (uint256)",
		"function repayBorrow() payable",
		"function repayBorrowBehalf(address borrower, uint256 repayAmount) returns (uint256)",
		"function repayBorrowBehalf(address borrower) payable"
	],
	"meta": [],
	"oracle.u": [
		"event AnchorPriceUpdated(bytes32 indexed symbolHash, uint256 anchorPrice, uint256 oldTimestamp, uint256 newTimestamp)",
		"event FailoverActivated(bytes32 indexed symbolHash)",
		"event FailoverDeactivated(bytes32 indexed symbolHash)",
		"event OwnershipTransferRequested(address indexed from, address indexed to)",
		"event OwnershipTransferred(address indexed from, address indexed to)",
		"event PriceGuarded(bytes32 indexed symbolHash, uint256 reporter, uint256 anchor)",
		"event PriceUpdated(bytes32 indexed symbolHash, uint256 price)",
		"event UniswapWindowUpdated(bytes32 indexed symbolHash, uint256 oldTimestamp, uint256 newTimestamp, uint256 oldPrice, uint256 newPrice)",
		"function acceptOwnership()",
		"function activateFailover(bytes32 symbolHash)",
		"function anchorPeriod() view returns (uint256)",
		"function deactivateFailover(bytes32 symbolHash)",
		"function ethBaseUnit() view returns (uint256)",
		"function expScale() view returns (uint256)",
		"function getTokenConfig(uint256 i) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigByCToken(address cToken) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigByReporter(address reporter) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigBySymbol(string symbol) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigBySymbolHash(bytes32 symbolHash) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getTokenConfigByUnderlying(address underlying) view returns ((address cToken, address underlying, bytes32 symbolHash, uint256 baseUnit, uint8 priceSource, uint256 fixedPrice, address uniswapMarket, address reporter, uint256 reporterMultiplier, bool isUniswapReversed))",
		"function getUnderlyingPrice(address cToken) view returns (uint256)",
		"function lowerBoundAnchorRatio() view returns (uint256)",
		"function maxTokens() view returns (uint256)",
		"function newObservations(bytes32) view returns (uint256 timestamp, uint256 acc)",
		"function numTokens() view returns (uint256)",
		"function oldObservations(bytes32) view returns (uint256 timestamp, uint256 acc)",
		"function owner() view returns (address)",
		"function pokeFailedOverPrice(bytes32 symbolHash)",
		"function price(string symbol) view returns (uint256)",
		"function prices(bytes32) view returns (uint248 price, bool failoverActive)",
		"function transferOwnership(address to)",
		"function upperBoundAnchorRatio() view returns (uint256)",
		"function validate(uint256, int256, uint256, int256 currentAnswer) returns (bool valid)"
	],
	"swaps": [
		"event PairCreated(address indexed token0, address indexed token1, address pair, uint256)",
		"function allPairs(uint256) view returns (address)",
		"function allPairsLength() view returns (uint256)",
		"function createPair(address tokenA, address tokenB) returns (address pair)",
		"function feeTo() view returns (address)",
		"function feeToSetter() view returns (address)",
		"function getPair(address, address) view returns (address)",
		"function setFeeTo(address _feeTo)",
		"function setFeeToSetter(address _feeToSetter)",
		"event Approval(address indexed owner, address indexed spender, uint256 value)",
		"event Transfer(address indexed from, address indexed to, uint256 value)",
		"function DOMAIN_SEPARATOR() view returns (bytes32)",
		"function PERMIT_TYPEHASH() pure returns (bytes32)",
		"function allowance(address owner, address spender) view returns (uint256)",
		"function approve(address spender, uint256 value) returns (bool)",
		"function balanceOf(address owner) view returns (uint256)",
		"function decimals() pure returns (uint8)",
		"function getReserves() view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)",
		"function mint(address to) returns (uint256 liquidity)",
		"function name() pure returns (string)",
		"function nonces(address owner) view returns (uint256)",
		"function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
		"function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data)",
		"function symbol() pure returns (string)",
		"function sync()",
		"function token0() pure returns (address)",
		"function token1() pure returns (address)",
		"function totalSupply() view returns (uint256)",
		"function transfer(address to, uint256 value) returns (bool)",
		"function transferFrom(address from, address to, uint256 value) returns (bool)",
		"function WETH() pure returns (address)",
		"function addLiquidity(address tokenA, address tokenB, uint256 amountADesired, uint256 amountBDesired, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB, uint256 liquidity)",
		"function addLiquidityETH(address token, uint256 amountTokenDesired, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity)",
		"function factory() pure returns (address)",
		"function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountIn)",
		"function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountOut)",
		"function getAmountsIn(uint256 amountOut, address[] path) view returns (uint256[] amounts)",
		"function getAmountsOut(uint256 amountIn, address[] path) view returns (uint256[] amounts)",
		"function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) pure returns (uint256 amountB)",
		"function removeLiquidity(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB)",
		"function removeLiquidityETH(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountToken, uint256 amountETH)",
		"function removeLiquidityETHSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountETH)",
		"function removeLiquidityETHWithPermit(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountToken, uint256 amountETH)",
		"function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountETH)",
		"function removeLiquidityWithPermit(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountA, uint256 amountB)",
		"function swapETHForExactTokens(uint256 amountOut, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts)",
		"function swapExactETHForTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts)",
		"function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable",
		"function swapExactTokensForETH(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts)",
		"function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline)",
		"function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts)",
		"function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline)",
		"function swapTokensForExactETH(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts)",
		"function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts)"
	],
	"token": [
		"event Approval(address indexed owner, address indexed spender, uint256 value)",
		"event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
		"event Transfer(address indexed from, address indexed to, uint256 value)",
		"function allowance(address owner, address spender) view returns (uint256)",
		"function approve(address spender, uint256 amount) returns (bool)",
		"function balanceOf(address account) view returns (uint256)",
		"function decimals() view returns (uint8)",
		"function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
		"function getOwner() view returns (address)",
		"function owner() view returns (address)",
		"function approved() view returns (address)",
		"function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
		"function mint(uint256 amount) returns (bool)",
		"function name() view returns (string)",
		"function symbol() view returns (string)",
		"function totalSupply() view returns (uint256)",
		"function transferOwnership(address newOwner)"
	],
	"trava": [
		"event Borrow()",
		"event Deposit()",
		"event LiquidationCall()",
		"event Paused()",
		"event Repay()",
		"event ReserveDataUpdated()",
		"event ReserveUsedAsCollateralDisabled()",
		"event ReserveUsedAsCollateralEnabled()",
		"event SetConfiguration()",
		"event Unpaused()",
		"event Withdraw()",
		"function borrow()",
		"function deposit()",
		"function finalizeTransfer()",
		"function getAddressesProvider()",
		"function getConfiguration()",
		"function getReserveData()",
		"function getReserveNormalizedIncome()",
		"function getReserveNormalizedVariableDebt()",
		"function getReservesList()",
		"function getUserAccountData()",
		"function getUserConfiguration()",
		"function initReserve()",
		"function isActiveCreditScore()",
		"function liquidationCall()",
		"function paused()",
		"function repay()",
		"function setActiveCreditScore()",
		"function setConfiguration()",
		"function setPause()",
		"function setReserveInterestRateStrategyAddress()",
		"function setUserUseReserveAsCollateral()",
		"function withdraw()"
	],
	"vaults.a": [
		"function REWARD_TOKEN() view returns (address)",
		"function STAKED_TOKEN() view returns (address)",
		"function claimRewards(address to, uint256 amount)",
		"function cooldown()",
		"function redeem(address to, uint256 amount)",
		"function stake(address onBehalfOf, uint256 amount)"
	],
	"vaults.c": [
		"function convexPoolId() returns (uint256 _poolId)",
		"function deposit(uint256 _amount, address _to)",
		"function earmarkFees() returns (bool)",
		"function earmarkRewards(uint256 _pid) returns (bool)",
		"function earned(address _account) view returns ((address token, uint256 amount)[] claimable)",
		"function getReward(address _account, address _forwardTo)",
		"function getReward(address _account)",
		"function poolInfo(uint256 _pid) returns (address _lptoken, address _token, address _gauge, address _crvRewards, address _stash, bool _shutdown)",
		"function rewardLength() view returns (uint256)",
		"function setVault(address _vault)",
		"function stake(uint256 _amount, address _to)",
		"function withdraw(uint256 _amount)",
		"function withdrawAndUnwrap(uint256 _amount)"
	],
	"vaults.o": [
		"function claim(address _recipient, bool _rebasing) returns (uint256)",
		"function forfeit() returns (uint256)",
		"function rebase()",
		"function stake(address _to, uint256 _amount, bool _rebasing, bool _claim) returns (uint256)",
		"function toggleLock()",
		"function unstake(address _to, uint256 _amount, bool _trigger, bool _rebasing) returns (uint256)",
		"function unwrap(address _to, uint256 _amount) returns (uint256 sBalance_)",
		"function wrap(address _to, uint256 _amount) returns (uint256 gBalance_)",
		"function contractBalance() view returns (uint256)",
		"function index() view returns (uint256)",
		"function supplyInWarmup() view returns (uint256)",
		"function totalStaked() view returns (uint256)",
		"function supplyInWarmup() view returns (uint256)",
		"function secondsToNextEpoch() view returns (uint256)",
		"function OHM() view returns (address)",
		"function sOHM() view returns (address)",
		"function gOHM() view returns (address)"
	],
	"vaults.p": [
		"event Deposit(address indexed sender, uint256 amount, uint256 shares, uint256 lastDepositedTime)",
		"event Harvest(address indexed sender, uint256 performanceFee, uint256 callFee)",
		"event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
		"event Pause()",
		"event Paused(address account)",
		"event Unpause()",
		"event Unpaused(address account)",
		"event Withdraw(address indexed sender, uint256 amount, uint256 shares)",
		"function MAX_CALL_FEE() view returns (uint256)",
		"function MAX_PERFORMANCE_FEE() view returns (uint256)",
		"function MAX_WITHDRAW_FEE() view returns (uint256)",
		"function MAX_WITHDRAW_FEE_PERIOD() view returns (uint256)",
		"function admin() view returns (address)",
		"function available() view returns (uint256)",
		"function balanceOf() view returns (uint256)",
		"function calculateHarvestCakeRewards() view returns (uint256)",
		"function calculateTotalPendingCakeRewards() view returns (uint256)",
		"function callFee() view returns (uint256)",
		"function deposit(uint256 _amount)",
		"function emergencyWithdraw()",
		"function getPricePerFullShare() view returns (uint256)",
		"function harvest()",
		"function inCaseTokensGetStuck(address _token)",
		"function lastHarvestedTime() view returns (uint256)",
		"function masterchef() view returns (address)",
		"function owner() view returns (address)",
		"function pause()",
		"function paused() view returns (bool)",
		"function performanceFee() view returns (uint256)",
		"function receiptToken() view returns (address)",
		"function renounceOwnership()",
		"function setAdmin(address _admin)",
		"function setCallFee(uint256 _callFee)",
		"function setPerformanceFee(uint256 _performanceFee)",
		"function setTreasury(address _treasury)",
		"function setWithdrawFee(uint256 _withdrawFee)",
		"function setWithdrawFeePeriod(uint256 _withdrawFeePeriod)",
		"function token() view returns (address)",
		"function totalShares() view returns (uint256)",
		"function transferOwnership(address newOwner)",
		"function treasury() view returns (address)",
		"function unpause()",
		"function userInfo(address) view returns (uint256 shares, uint256 lastDepositedTime, uint256 cakeAtLastUserAction, uint256 lastUserActionTime)",
		"function withdraw(uint256 _shares)",
		"function withdrawAll()",
		"function withdrawFee() view returns (uint256)",
		"function withdrawFeePeriod() view returns (uint256)"
	],
	"vaults.ve": [
		"event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
		"event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
		"event Deposit(address indexed provider, uint256 tokenId, uint256 value, uint256 indexed locktime, uint8 deposit_type, uint256 ts)",
		"event Supply(uint256 prevSupply, uint256 supply)",
		"event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
		"event Withdraw(address indexed provider, uint256 tokenId, uint256 value, uint256 ts)",
		"function abstain(uint256 _tokenId)",
		"function approve(address _approved, uint256 _tokenId)",
		"function attach(uint256 _tokenId)",
		"function attachments(uint256) view returns (uint256)",
		"function balanceOf(address _owner) view returns (uint256)",
		"function balanceOfAtNFT(uint256 _tokenId, uint256 _block) view returns (uint256)",
		"function balanceOfNFT(uint256 _tokenId) view returns (uint256)",
		"function balanceOfNFTAt(uint256 _tokenId, uint256 _t) view returns (uint256)",
		"function block_number() view returns (uint256)",
		"function checkpoint()",
		"function create_lock(uint256 _value, uint256 _lock_duration) returns (uint256)",
		"function create_lock_for(uint256 _value, uint256 _lock_duration, address _to) returns (uint256)",
		"function decimals() view returns (uint8)",
		"function deposit_for(uint256 _tokenId, uint256 _value)",
		"function detach(uint256 _tokenId)",
		"function epoch() view returns (uint256)",
		"function getApproved(uint256 _tokenId) view returns (address)",
		"function get_last_user_slope(uint256 _tokenId) view returns (int128)",
		"function increase_amount(uint256 _tokenId, uint256 _value)",
		"function increase_unlock_time(uint256 _tokenId, uint256 _lock_duration)",
		"function isApprovedForAll(address _owner, address _operator) view returns (bool)",
		"function isApprovedOrOwner(address _spender, uint256 _tokenId) view returns (bool)",
		"function locked(uint256) view returns (int128 amount, uint256 end)",
		"function locked__end(uint256 _tokenId) view returns (uint256)",
		"function merge(uint256 _from, uint256 _to)",
		"function name() view returns (string)",
		"function ownerOf(uint256 _tokenId) view returns (address)",
		"function ownership_change(uint256) view returns (uint256)",
		"function point_history(uint256) view returns (int128 bias, int128 slope, uint256 ts, uint256 blk)",
		"function safeTransferFrom(address _from, address _to, uint256 _tokenId)",
		"function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data)",
		"function setApprovalForAll(address _operator, bool _approved)",
		"function setVoter(address _voter)",
		"function slope_changes(uint256) view returns (int128)",
		"function supply() view returns (uint256)",
		"function supportsInterface(bytes4 _interfaceID) view returns (bool)",
		"function symbol() view returns (string)",
		"function token() view returns (address)",
		"function tokenOfOwnerByIndex(address _owner, uint256 _tokenIndex) view returns (uint256)",
		"function tokenURI(uint256 _tokenId) view returns (string)",
		"function totalSupply() view returns (uint256)",
		"function totalSupplyAt(uint256 _block) view returns (uint256)",
		"function totalSupplyAtT(uint256 t) view returns (uint256)",
		"function transferFrom(address _from, address _to, uint256 _tokenId)",
		"function user_point_epoch(uint256) view returns (uint256)",
		"function user_point_history(uint256, uint256) view returns (int128 bias, int128 slope, uint256 ts, uint256 blk)",
		"function user_point_history__ts(uint256 _tokenId, uint256 _idx) view returns (uint256)",
		"function version() view returns (string)",
		"function voted(uint256) view returns (bool)",
		"function voter() view returns (address)",
		"function voting(uint256 _tokenId)",
		"function withdraw(uint256 _tokenId)"
	],
	"vaults.vex": [
		"function attach(uint256 _tokenId)",
		"function balanceOfNFT(uint256 _tokenId) view returns (uint256)",
		"function balanceOfNFTAt(uint256 _tokenId, uint256 _t) view returns (uint256)",
		"function checkpoint()",
		"function create_lock(address _token, uint256 _value, uint256 _lock_duration) returns (uint256)",
		"function create_lock_for(address _token, uint256 _value, uint256 _lock_duration, address _to) returns (uint256)",
		"function deposit_for(uint256 _tokenId, uint256 _value)",
		"function deposit_for_reward_distribution(uint256 _tokenId, uint256 _rewardValue)",
		"function detach(uint256 _tokenId)",
		"function getOwner() view returns (address)",
		"function get_last_user_slope(uint256 _tokenId) view returns (int128)",
		"function getveNFTOfUser(address _user) view returns (uint256[])",
		"function increase_amount(uint256 _tokenId, uint256 _value)",
		"function increase_unlock_time(uint256 _tokenId, uint256 _lock_duration)",
		"function locked__end(uint256 _tokenId) view returns (uint256)",
		"function merge(uint256 _from, uint256 _to)",
		"function totalSupplyAtT(uint256 t) view returns (uint256)",
		"function user_point_history__ts(uint256 _tokenId, uint256 _idx) view returns (uint256)",
		"function votingPowerOfUser(address _user) view returns (uint256)",
		"function votingPowerOfUserAt(address _user, uint256 _t) view returns (uint256)",
		"function withdraw(uint256 _tokenId)"
	]
};
const addresses = {
	"56": {
		"aggregator": "0x308D85243Bbc67cd3D595f0b4FE4a5AF473BcE50",
		"swap.router": "0x10ed43c718714eb63d5aa57b78b54704e256024e",
		"swap.factory": "0xca143ce32fe78f1f7019d7d551a6402fc5350c73",
		"token.usd": [
			"0xe9e7cea3dedca5984780bafc599bd69add087d56",
			"0x55d398326f99059ff775485246999027b3197955",
			"0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
			"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
		],
		"token.eth": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
	}
};
const chains = [
    {
        "name": "Ethereum Mainnet",
        "chainId": 1,
        "shortName": "eth",
        "networkId": 1,
        "nativeCurrency": {
            "name": "Ether",
            "symbol": "ETH",
            "decimals": 18
        },
        "rpc": [
            "https://cloudflare-eth.com",
            "https://mainnet.infura.io/v3/${INFURA_API_KEY}",
            "wss://mainnet.infura.io/ws/v3/${INFURA_API_KEY}",
            "https://api.mycryptoapi.com/eth"
        ],
        "faucets": [],
        "infoURL": "https://ethereum.org",
        "archive": [
            "https://speedy-nodes-nyc.moralis.io/2ab951c0550908cbd73d21f4/eth/mainnet/archive"
        ],
        "explorer": {
            "api_url": "https://api.etherscan.io/api",
            "api_key": "2MHE4CTGBBYHK56GM52PBEH1HSGQNSBA47"
        }
    },
    {
        "name": "Ethereum Testnet Rinkeby",
        "chainId": 4,
        "shortName": "rin",
        "networkId": 4,
        "nativeCurrency": {
            "name": "Rinkeby Ether",
            "symbol": "RIN",
            "decimals": 18
        },
        "rpc": [
            "https://rinkeby-light.eth.linkpool.io",
            "https://rinkeby.infura.io/v3/${INFURA_API_KEY}",
            "wss://rinkeby.infura.io/ws/v3/${INFURA_API_KEY}"
        ],
        "faucets": [
            "https://faucet.rinkeby.io"
        ],
        "infoURL": "https://www.rinkeby.io"
    },
    {
        "name": "Optimistic Ethereum",
        "chainId": 10,
        "shortName": "oeth",
        "networkId": 10,
        "nativeCurrency": {
            "name": "Ether",
            "symbol": "OETH",
            "decimals": 18
        },
        "rpc": [
            "https://mainnet.optimism.io/"
        ],
        "faucets": [],
        "infoURL": "https://optimism.io"
    },
    {
        "name": "Binance Smart Chain Mainnet",
        "chainId": 56,
        "shortName": "bnb",
        "networkId": 56,
        "nativeCurrency": {
            "name": "Binance Chain Native Token",
            "symbol": "BNB",
            "decimals": 18
        },
        "rpc": [
        	"https://nd-233-026-729.p2pify.com/4d072eb4598e7a592b8d18c5ac7b2d61",
            "wss://ws-nd-233-026-729.p2pify.com/4d072eb4598e7a592b8d18c5ac7b2d61",
            "https://bsc-dataseed1.binance.org",
            "https://bsc-dataseed2.binance.org",
            "https://bsc-dataseed3.binance.org",
            "https://bsc-dataseed4.binance.org",
            "https://bsc-dataseed1.defibit.io",
            "https://bsc-dataseed2.defibit.io",
            "https://bsc-dataseed3.defibit.io",
            "https://bsc-dataseed4.defibit.io",
            "https://bsc-dataseed1.ninicoin.io",
            "https://bsc-dataseed2.ninicoin.io",
            "https://bsc-dataseed3.ninicoin.io",
            "https://bsc-dataseed4.ninicoin.io",
            "wss://bsc-ws-node.nariox.org"
        ],
        "faucets": [
            "https://free-online-app.com/faucet-for-eth-evm-chains/"
        ],
        "infoURL": "https://www.binance.org",
        "archive": [
            "https://speedy-nodes-nyc.moralis.io/2ab951c0550908cbd73d21f4/bsc/mainnet/archive"
        ],
        "explorer": {
            "api_url": "https://api.bscscan.com/api",
            "api_key": "BI4KGXG8B75WEK1D22MH73NYQMZJR5EV6T"
        }
    },
    {
        "name": "Binance Smart Chain Testnet",
        "chainId": 97,
        "shortName": "bnbt",
        "networkId": 97,
        "nativeCurrency": {
            "name": "Binance Chain Native Token",
            "symbol": "tBNB",
            "decimals": 18
        },
        "rpc": [
            "https://data-seed-prebsc-1-s1.binance.org:8545",
            "https://data-seed-prebsc-2-s1.binance.org:8545",
            "https://data-seed-prebsc-1-s2.binance.org:8545",
            "https://data-seed-prebsc-2-s2.binance.org:8545",
            "https://data-seed-prebsc-1-s3.binance.org:8545",
            "https://data-seed-prebsc-2-s3.binance.org:8545"
        ],
        "faucets": [
            "https://testnet.binance.org/faucet-smart"
        ],
        "infoURL": "https://testnet.binance.org/",
        "nativeCurrency": {
            "name": "Ubiq Ether",
            "symbol": "UBQ",
            "decimals": 18
        },
        "rpc": [
            "https://rpc.octano.dev",
            "https://pyrus2.ubiqscan.io"
        ],
        "faucets": [],
        "infoURL": "https://ubiqsmart.com"
    }
];
const methods = {"lendings":"Deposit","vaults":"Stake","swaps":"Swap","providinglps":"Add Liquidity Pair","borrows":"Borrow"};
const tokens = {
	"": {
		"img_prefix": "https://storage.googleapis.com/token-c515a.appspot.com",
		"chainId": "56"
	},
	"0x007ec643c7cc33a70c083fc305c283dd009c8b94": {
		"symbol": "GMT/USDC",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/GMT-USDC.png",
		"name": "Pancake LPs"
	},
	"0x014608e87af97a054c9a49f81e1473076d51d9a3": {
		"symbol": "UNI/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/UNI-BNB.png",
		"name": "Pancake LPs"
	},
	"0x03f18135c44c64ebfdcbad8297fe5bdafdbbdd86": {
		"symbol": "XRP/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/XRP-BNB.png",
		"name": "Pancake LPs"
	},
	"0x133ee93fe93320e1182923e1a640912ede17c90c": {
		"symbol": "VAI/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/VAI-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x16afc4f2ad82986bbe2a4525601f8199ab9c832d": {
		"symbol": "SUSHI/ETH",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/SUSHI-ETH.png",
		"name": "Pancake LPs"
	},
	"0x16b9a82891338f9ba80e2d6970fdda79d1eb0dae": {
		"symbol": "USDT/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/USDT-BNB.png",
		"name": "Pancake LPs"
	},
	"0x2354ef4df11afacb85a5c7f98b624072eccddbb1": {
		"symbol": "USDC/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/USDC-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x28415ff2c35b65b9e5c7de82126b4015ab9d031f": {
		"symbol": "ADA/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ADA-BNB.png",
		"name": "Pancake LPs"
	},
	"0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c": {
		"symbol": "TUSD/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/TUSD-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x3dcb1787a95d2ea0eb7d00887704eebf0d79bb13": {
		"symbol": "TWT/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/TWT-BNB.png",
		"name": "Pancake LPs"
	},
	"0x6045931e511ef7e53a4a817f971e0ca28c758809": {
		"symbol": "CHR/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/CHR-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x66fdb2eccfb58cf098eaa419e5efde841368e489": {
		"symbol": "DAI/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/DAI-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x71b01ebddd797c8e9e0b003ea2f4fd207fbf46cc": {
		"symbol": "LTC/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/LTC-BNB.png",
		"name": "Pancake LPs"
	},
	"0x7eb5d86fd78f3852a3e0e064f2842d45a3db6ea2": {
		"symbol": "XVS/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/XVS-BNB.png",
		"name": "Pancake LPs"
	},
	"0x804678fa97d91b974ec2af3c843270886528a9e6": {
		"symbol": "CAKE/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/CAKE-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x824eb9fadfb377394430d2744fa7c42916de3ece": {
		"symbol": "LINK/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/LINK-BNB.png",
		"name": "Pancake LPs"
	},
	"0x89ee0491ce55d2f7472a97602a95426216167189": {
		"symbol": "WOO/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/WOO-BNB.png",
		"name": "Pancake LPs"
	},
	"0x8ca3ff14a52b080c54a6d1a405eeca02959d39fe": {
		"symbol": "BSW/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BSW-BNB.png",
		"name": "Pancake LPs"
	},
	"0x8e744ec2795c8b836689d1b4ebe1489204357dac": {
		"symbol": "RACA/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "https://firebasestorage.googleapis.com/v0/b/token-c515a.appspot.com/o/tokens_v2%2FRACA-BUSD.png?alt=media&token=eba1d684-9aa4-4e70-8dc4-844b8a17ac91",
		"name": "Pancake LPs"
	},
	"0xa39af17ce4a8eb807e076805da1e2b8ea7d0755b": {
		"symbol": "CAKE/USDT",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/CAKE-USDT.png",
		"name": "Pancake LPs"
	},
	"0xac109c8025f272414fd9e2faa805a583708a017f": {
		"symbol": "DOGE/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/DOGE-BNB.png",
		"name": "Pancake LPs"
	},
	"0xacf47cbeaab5c8a6ee99263cfe43995f89fb3206": {
		"symbol": "ALPHA/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ALPHA-BNB.png",
		"name": "Pancake LPs"
	},
	"0xbe6a4f74fddc88853612c50d7404e059b37692d8": {
		"symbol": "GAL/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/GAL-BNB.png",
		"name": "Pancake LPs"
	},
	"0xc13aa76aac067c86ae38028019f414d731b3d86a": {
		"symbol": "IOTX/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/IOTX-BUSD.png",
		"name": "Pancake LPs"
	},
	"0xc2d00de94795e60fb76bc37d899170996cbda436": {
		"symbol": "AXS/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/AXS-BNB.png",
		"name": "Pancake LPs"
	},
	"0xd171b26e4484402de70e3ea256be5a2630d7e88d": {
		"symbol": "BTCB/ETH",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BTCB-ETH.png",
		"name": "Pancake LPs"
	},
	"0xd8e2f8b6db204c405543953ef6359912fe3a88d6": {
		"symbol": "SXP/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/SXP-BNB.png",
		"name": "Pancake LPs"
	},
	"0xdd5bad8f8b360d76d12fda230f8baf42fe0022cf": {
		"symbol": "DOT/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/DOT-BNB.png",
		"name": "Pancake LPs"
	},
	"0xea26b78255df2bbc31c1ebf60010d78670185bd0": {
		"symbol": "ETH/USDC",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ETH-USDC.png",
		"name": "Pancake LPs"
	},
	"0xec6557348085aa57c72514d67070dc863c0a5a8c": {
		"symbol": "USDC/USDT",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/USDC-USDT.png",
		"name": "Pancake LPs"
	},
	"0xf45cd219aef8618a92baa7ad848364a158a24f33": {
		"symbol": "BTCB/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BTCB-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x865c77d4ff6383e06c58350a2cfb95cca2c0f056": {
		"symbol": "TRAVA/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/TRAVA-BNB.png",
		"name": "Pancake LPs"
	},
	"0x55d398326f99059ff775485246999027b3197955": {
		"symbol": "USDT",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/USDT.png",
		"name": "Tether USD"
	},
	"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d": {
		"symbol": "USDC",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/USDC.png",
		"name": "USD Coin"
	},
	"0xe9e7cea3dedca5984780bafc599bd69add087d56": {
		"symbol": "BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BUSD.png",
		"name": "BUSD Token"
	},
	"0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3": {
		"symbol": "DAI",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/DAI.png",
		"name": "Dai Token"
	},
	"0xcc42724c6683b7e57334c4e856f4c9965ed682bd": {
		"symbol": "MATIC",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/MATIC.png",
		"name": "Matic Token"
	},
	"0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd": {
		"symbol": "LINK",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/LINK.png",
		"name": "ChainLink Token"
	},
	"0x0eb3a705fc54725037cc9e008bdede697f62f335": {
		"symbol": "ATOM",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ATOM.png",
		"name": "Cosmos Token"
	},
	"0xbf5140a22578168fd562dccf235e5d43a02ce9b1": {
		"symbol": "UNI",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/UNI.png",
		"name": "Uniswap"
	},
	"0x715d400f88c167884bbcc41c5fea407ed4d2f8a0": {
		"symbol": "AXS",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/AXS.png",
		"name": "Axie Infinity Shard"
	},
	"0xfe19f0b51438fd612f6fd59c1dbb3ea319f433ba": {
		"symbol": "MIM",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/MIM.png",
		"name": "Magic Internet Money"
	},
	"0x3019bf2a2ef8040c242c9a4c5c4bd4c81678b2a1": {
		"symbol": "GMT",
		"decimals": 8,
		"internal": false,
		"img": "/tokens_v2/GMT.png",
		"name": "Green Metaverse Token"
	},
	"0x361c60b7c2828fcab80988d00d1d542c83387b50": {
		"symbol": "DFI",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/DFI.png",
		"name": "DFI (DefiChain)"
	},
	"0x90c97f71e18723b0cf0dfa30ee176ab653e89f40": {
		"symbol": "FRAX",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/FRAX.png",
		"name": "Frax"
	},
	"0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82": {
		"symbol": "Cake",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/CAKE.png",
		"name": "PancakeSwap Token"
	},
	"0x2170ed0880ac9a755fd29b2688956bd959f933f8": {
		"symbol": "ETH",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ETH.png",
		"name": "Ethereum Token"
	},
	"0xad29abb318791d579433d831ed122afeaf29dcfe": {
		"symbol": "FTM",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/FTM.png",
		"name": "Fantom"
	},
	"0x14016e85a25aeb13065688cafb43044c2ef86784": {
		"symbol": "TUSD",
		"decimals": 18,
		"internal": true,
		"img": "https://firebasestorage.googleapis.com/v0/b/token-c515a.appspot.com/o/tokens_v2%2FTUSD.png?alt=media&token=ce5a5772-abcd-4d9f-b19c-07a613745c96",
		"name": "TrueUSD"
	},
	"0xfb6115445bff7b52feb98650c87f44907e58f802": {
		"symbol": "AAVE",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/AAVE.png",
		"name": "Aave Token"
	},
	"0x7ddee176f665cd201f93eede625770e2fd911990": {
		"symbol": "GALA",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/GALA.png",
		"name": "pTokens GALA"
	},
	"0xb86abcb37c3a4b64f74f59301aff131a1becc787": {
		"symbol": "ZIL",
		"decimals": 12,
		"internal": false,
		"img": "/tokens_v2/ZIL.png",
		"name": "Zilliqa"
	},
	"0xe48a3d7d0bc88d552f730b62c006bc925eadb9ee": {
		"symbol": "FXS",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/FXS.png",
		"name": "Frax Share"
	},
	"0x52ce071bd9b1c4b00a0b92d298c512478cad67e8": {
		"symbol": "COMP",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/COMP.png",
		"name": "Compound Coin"
	},
	"0xd17479997f34dd9156deef8f95a52d81d265be9c": {
		"symbol": "USDD",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/USDD.png",
		"name": "Decentralized USD"
	},
	"0x111111111117dc0aa78b770fa6a738034120c302": {
		"symbol": "1INCH",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/1INCH.png",
		"name": "1INCH Token"
	},
	"0x3764bc0de9b6a68c67929130aaec16b6060cab8c": {
		"symbol": "XIDO",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/XIDO.png",
		"name": "XIDO FINANCE"
	},
	"0x947950bcc74888a40ffa2593c5798f11fc9124c4": {
		"symbol": "SUSHI",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/SUSHI.png",
		"name": "SushiToken"
	},
	"0xf307910a4c7bbc79691fd374889b36d8531b08e3": {
		"symbol": "ANKR",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/ANKR.png",
		"name": "Ankr"
	},
	"0x475bfaa1848591ae0e6ab69600f48d828f61a80e": {
		"symbol": "DOME",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/DOME.png",
		"name": "Everdome"
	},
	"0x9678e42cebeb63f23197d726b29b1cb20d0064e5": {
		"symbol": "IOTX",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/IOTX.png",
		"name": "IoTeX Network"
	},
	"0x20ee7b720f4e4c4ffcb00c4065cdae55271aecca": {
		"symbol": "NFT",
		"decimals": 6,
		"internal": false,
		"img": "/tokens_v2/NFT.png",
		"name": "APENFT"
	},
	"0x0a7e7d210c45c4abba183c1d0551b53ad1756eca": {
		"symbol": "WEVER",
		"decimals": 9,
		"internal": false,
		"img": "/tokens_v2/WEVER.png",
		"name": "Wrapped Ever"
	},
	"0xa4080f1778e69467e905b8d6f72f6e441f9e9484": {
		"symbol": "SYN",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/SYN.png",
		"name": "Synapse"
	},
	"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c": {
		"symbol": "BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BNB.png",
		"name": "Wrapped BNB"
	},
	"0x47bead2563dcbf3bf2c9407fea4dc236faba485a": {
		"symbol": "SXP",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/SXP.png",
		"name": "Swipe"
	},
	"0x3f56e0c36d275367b8c502090edf38289b3dea0d": {
		"symbol": "MAI",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/MAI.png",
		"name": "Mai Stablecoin"
	},
	"0x42981d0bfbaf196529376ee702f2a9eb9092fcb5": {
		"symbol": "SFM",
		"decimals": 9,
		"internal": false,
		"img": "/tokens_v2/SFM.png",
		"name": "SafeMoon"
	},
	"0x8076c74c5e3f5852037f31ff0093eeb8c8add8d3": {
		"symbol": "SAFEMOON",
		"decimals": 9,
		"internal": false,
		"img": "/tokens_v2/SAFEMOON.png",
		"name": "SafeMoon"
	},
	"0xe4cc45bb5dbda06db6183e8bf016569f40497aa5": {
		"symbol": "GAL",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/GAL.png",
		"name": "Project Galaxy"
	},
	"0x4b0f1812e5df2a09796481ff14017e6005508003": {
		"symbol": "TWT",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/TWT.png",
		"name": "Trust Wallet"
	},
	"0x4691937a7508860f876c9c0a2a617e7d9e945d4b": {
		"symbol": "WOO",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/WOO.png",
		"name": "Wootrade Network"
	},
	"0x1f64fdad335ed784898effb5ce22d54d8f432523": {
		"symbol": "10SET",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/10SET.png",
		"name": "10Set Token"
	},
	"0xfce146bf3146100cfe5db4129cf6c82b0ef4ad8c": {
		"symbol": "renBTC",
		"decimals": 8,
		"internal": true,
		"img": "/tokens_v2/RENBTC.png",
		"name": "renBTC"
	},
	"0x12bb890508c125661e03b09ec06e404bc9289040": {
		"symbol": "RACA",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/RACA.png",
		"name": "Radio Caca V2"
	},
	"0xf9cec8d50f6c8ad3fb6dccec577e05aa32b224fe": {
		"symbol": "CHR",
		"decimals": 6,
		"internal": false,
		"img": "/tokens_v2/CHR.png",
		"name": "Chroma"
	},
	"0x22f3997a5df5a80e29871fed24fe3e85741f5e82": {
		"symbol": "DAO",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/DAO.png",
		"name": "DAO Maker [via ChainPort.io]"
	},
	"0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b": {
		"symbol": "KNC",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/KNC.png",
		"name": "Kyber Network Crystal"
	},
	"0x678e840c640f619e17848045d23072844224dd37": {
		"symbol": "CRTS",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/CRTS.png",
		"name": "Cratos BEP20"
	},
	"0xe9c803f48dffe50180bd5b01dc04da939e3445fc": {
		"symbol": "VLX",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/VLX.png",
		"name": "Velas"
	},
	"0x965f527d9159dce6288a2219db51fc6eef120dd1": {
		"symbol": "BSW",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/BSW.png",
		"name": "Biswap"
	},
	"0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe": {
		"symbol": "XRP",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/XRP.png",
		"name": "XRP Token"
	},
	"0x3ee2200efb3400fabb9aacf31297cbdd1d435d47": {
		"symbol": "ADA",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ADA.png",
		"name": "Cardano Token"
	},
	"0x7083609fce4d1d8dc0c979aab8c869ea2c873402": {
		"symbol": "DOT",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/DOT.png",
		"name": "Polkadot Token"
	},
	"0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c": {
		"symbol": "BTCB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BTCB.png",
		"name": "BTCB Token"
	},
	"0xba2ae424d960c26247dd6c32edc70b295c744c43": {
		"symbol": "DOGE",
		"decimals": 8,
		"internal": true,
		"img": "/tokens_v2/DOGE.png",
		"name": "Dogecoin"
	},
	"0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63": {
		"symbol": "XVS",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/XVS.png",
		"name": "Venus"
	},
	"0x0391be54e72f7e001f6bbc331777710b4f2999ef": {
		"symbol": "TRAVA",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/TRAVA.png",
		"name": "TravaFinance Token"
	},
	"0x170772a06affc0d375ce90ef59c8ec04c7ebf5d2": {
		"symbol": "rTRAVA",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/RTRAVA.png",
		"name": "Royalty Trava"
	},
	"0x0000000000000000000000000000000000000000": {
		"symbol": "BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens/BNB.png",
		"name": "Native token"
	},
	"0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153": {
		"symbol": "FIL",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/FIL.png",
		"name": "Filecoin"
	},
	"0x156ab3346823b651294766e23e6cf87254d68962": {
		"symbol": "LUNA",
		"decimals": 6,
		"internal": true,
		"img": "/tokens_v2/LUNA.png",
		"name": "LUNA (Wormhole)"
	},
	"0x250632378e573c6be1ac2f97fcdf00515d0aa91b": {
		"symbol": "BETH",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BETH.png",
		"name": "Binance Beacon ETH"
	},
	"0x3d4350cd54aef9f9b2c29435e0fa809957b3f30a": {
		"symbol": "UST",
		"decimals": 6,
		"internal": true,
		"img": "/tokens_v2/UST.png",
		"name": "UST (Wormhole)"
	},
	"0x4338665cbb7b2485a8855a139b75d5e34ab0db94": {
		"symbol": "LTC",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/LTC.png",
		"name": "Litecoin Token"
	},
	"0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b": {
		"symbol": "TRX",
		"decimals": 18,
		"internal": true,
		"img": "https://firebasestorage.googleapis.com/v0/b/token-c515a.appspot.com/o/tokens_v2%2FTRX.png?alt=media&token=a72eda76-064b-48e9-9157-cfa993ebff10",
		"name": "TRON"
	},
	"0x8ff795a6f4d97e7887c79bea79aba5cc76444adf": {
		"symbol": "BCH",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BCH.png",
		"name": "Bitcoin Cash Token"
	},
	"0x0ed7e52944161450477ee417de9cd3a859b14fd0": {
		"symbol": "Cake/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/CAKE-BNB.png",
		"name": "Pancake LPs"
	},
	"0x101d82428437127bf1608f699cd651e6abf9766e": {
		"symbol": "BAT",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BAT.png",
		"name": "Basic Attention Token"
	},
	"0x16939ef78684453bfdfb47825f8a5f714f12623a": {
		"symbol": "XTZ",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/XTZ.png",
		"name": "Tezos Token"
	},
	"0x1b96b92314c44b159149f7e0303511fb2fc4774f": {
		"symbol": "BUSD/BNB",
		"decimals": 18,
		"internal": true,
		"img": "https://firebasestorage.googleapis.com/v0/b/token-c515a.appspot.com/o/tokens_v2%2Fempty-token.png?alt=media&token=2f9dfcc1-88a0-472c-a51f-4babc0c583f0",
		"name": "Pancake LPs"
	},
	"0x4bd17003473389a42daf6a0a729f6fdb328bbbd7": {
		"symbol": "VAI",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/VAI.png",
		"name": "VAI Stablecoin"
	},
	"0x56b6fb708fc5732dec1afc8d8556423a2edccbd6": {
		"symbol": "EOS",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/EOS.png",
		"name": "EOS Token"
	},
	"0x58f876857a02d6762e0101bb5c46a8c1ed44dc16": {
		"symbol": "BUSD/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BUSD-BNB.png",
		"name": "Pancake LPs"
	},
	"0x61eb789d75a95caa3ff50ed7e47b96c132fec082": {
		"symbol": "BTCB/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BTCB-BNB.png",
		"name": "Pancake LPs"
	},
	"0x695fd30af473f2960e81dc9ba7cb67679d35edb7": {
		"symbol": "renZEC",
		"decimals": 8,
		"internal": true,
		"img": "/tokens_v2/RENZEC.png",
		"name": "renZEC"
	},
	"0x70d8929d04b60af4fb9b58713ebcf18765ade422": {
		"symbol": "ETH/BNB",
		"decimals": 18,
		"internal": true,
		"img": "https://firebasestorage.googleapis.com/v0/b/token-c515a.appspot.com/o/tokens_v2%2Fempty-token.png?alt=media&token=2f9dfcc1-88a0-472c-a51f-4babc0c583f0",
		"name": "Pancake LPs"
	},
	"0x74e4716e431f45807dcf19f284c7aa99f18a4fbc": {
		"symbol": "ETH/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ETH-BNB.png",
		"name": "Pancake LPs"
	},
	"0x7561eee90e24f3b348e1087a005f78b4c8453524": {
		"symbol": "BTCB/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens/BTCB-BNB.png",
		"name": "Pancake LPs"
	},
	"0x7efaef62fddcca950418312c6c91aef321375a00": {
		"symbol": "USDT/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/USDT-BUSD.png",
		"name": "Pancake LPs"
	},
	"0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e": {
		"symbol": "YFI",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/YFI.png",
		"name": "yearn.finance"
	},
	"0xa184088a740c695e156f91f5cc086a06bb78b827": {
		"symbol": "AUTO",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/AUTO.png",
		"name": "AUTOv2"
	},
	"0xa1faa113cbe53436df28ff0aee54275c13b40975": {
		"symbol": "ALPHA",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ALPHA.png",
		"name": "AlphaToken"
	},
	"0xa527a61703d82139f8a06bc30097cc9caa2df5a6": {
		"symbol": "Cake/BNB",
		"decimals": 18,
		"internal": true,
		"img": "/tokens/CAKE-BNB.png",
		"name": "Pancake LPs"
	},
	"0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18": {
		"symbol": "BAND",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/BAND.png",
		"name": "Band Protocol Token"
	},
	"0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd": {
		"symbol": "USDT/BUSD",
		"decimals": 18,
		"internal": true,
		"img": "/tokens/USDT-BUSD.png",
		"name": "Pancake LPs"
	},
	"0xd4cb328a82bdf5f03eb737f37fa6b370aef3e888": {
		"symbol": "CREAM",
		"decimals": 18,
		"internal": false,
		"img": "/tokens_v2/CREAM.png",
		"name": "Cream"
	},
	"0xa325ad6d9c92b55a3fc5ad7e412b1518f96441c0": {
		"symbol": "ORAI",
		"decimals": 18,
		"internal": true,
		"img": "/tokens_v2/ORAI.png",
		"name": "Oraichain Token"
	}
};
export default { abis, addresses, chains, methods, tokens }
